name: tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  build:
    permissions:
      pull-requests: write
      contents: read
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      COVERALLS_PARALLEL: true
      PYTHONPATH: src
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.11", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Cache Network Requests
        uses: actions/cache@v3
        with:
          key: sqlite-${{ hashFiles('**/tests/fixtures/network/**') }}
          path: |
            **/.ticker-cache/*.sqlite
      - name: Test with pytest
        run: |
          coverage run -m pytest --run-webtest --doctest-modules
          coverage report
          # coveralls --service=github
      - name: Run smoke test
        run: |
          coverage run -a -m stocktracer --help
          coverage run -a -m stocktracer analyze --help
          coverage run -a -m stocktracer export --help
          coverage report
      - name: Coveralls
        run: |
          coveralls --service=github
      # - name: Coveralls
      #   uses: coverallsapp/github-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     flag-name: run-${{ join(matrix.*, '-') }}
      #     parallel: true
      #     format: python
      #   if: ${{ success() }}
      - name: Lint - Ruff 
        run: |
          ruff src 
        if: ${{ always() }}
      - name: Lint - Black
        run: |
          black --check src
        if: ${{ always() }}
      - name: Lint - isort
        run: |
          isort --check src
        if: ${{ always() }}
      # - name: Upload pytest test results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: pytest-results-${{ matrix.python-version }}
      #     path: junit/test-results-${{ matrix.python-version }}.xml
      #   # Use always() to always run this step to publish test results when there are test failures
      #   if: ${{ always() }}

  finish:
    needs: build
    if: ${{ always() }}
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        cache: 'pip'
    - name: Install dependencies
      run: |
        pip install coveralls
    - name: Coveralls Finished
      run: |
        coveralls --service=github --finish
    # - name: Coveralls Finished
    #   uses: coverallsapp/github-action@v2
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     parallel-finished: true
    #     carryforward: "run-1,run-2,run-3"