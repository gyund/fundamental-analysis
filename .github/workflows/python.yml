name: python

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with ruff
        run: |
          ruff . 
          # stop the build if there are Python syntax errors or undefined names
          # ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
          # default set of ruff rules with GitHub Annotations
          # ruff --format=github --target-version=py37 .
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=ticker --cov-report=xml --cov-report=html
      - name: Run smoke test
        run: |
          python -m ticker --help
          python -m ticker analyze --help
          python -m ticker export --help
      - name: Check Docstrings
        run: |
          pydoctest --config ticker/pydocktests.json
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}