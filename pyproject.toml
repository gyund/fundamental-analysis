[tool.pytest.ini_options]
# log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(pathname)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
testpaths = [
    "src/tests",
]
# addopts = [
#     "--import-mode=importlib",
# ]

markers =[
    "webtest: mark a test as a webtest. These kinds of tests can trigger downloads or other network interactions.",
    "slow: mark test as slow."
    ]

[tool.ruff]

select = [
    # stop the build if there are Python syntax errors or undefined names
    "E9",
    "F63",
    "F7",
    "F82"

]

format = "github"

# fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
# unfixable = []


target-version = "py310"
line-length = 88

[tool.isort] 
profile = "black"

[tool.coverage.run]
branch = true
source = ["src/stocktracer/"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
    ]

[tool.pydocstyle]
inherit = false
match = '(?!(test_|conftest)).*\.py'
match_dir = '^(?!(venv|tests|poc)).*'
convention = "pep257"
ignore_self_only_init = true

[tool.pylint.main]
source-roots = ["src"]
fail-under = 9.5
fail-on = [
    # "redefined-builtin",    # unintended sideaffects
    "unused-variable",      # cleaner code
    "unused-import",        # cleaner code
    "no-self-argument",     # possible bug, annotate correctly
    "use-list-literal",     # cleaner code
    "no-else-return",       # cleaner code
    "no-member",            # make explicit for clarity 
    # "invalid-name",         # consistency
    ]

[tool.pylint."messages control"]

logging-format-style = "new"
disable = ["line-too-long", "logging-fstring-interpolation", "too-few-public-methods"]
# disable=["W1203"]
# disable=["all"]

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.reports]
output-format = ["colorized"]


[tool.poetry]
name = "stocktracer"
version = "0.4.0"
description = "Tools for aggregating efficient ways to consume and process publically traded equities on the US stock market. Includes support for SEC quarterly data processing."
authors = ["Gary Yund <gyund@users.noreply.github.com>"]
# Per https://github.com/python-poetry/poetry/issues/7786
# license = "License :: OSI Approved :: Eclipse Public License 2.0 (EPL-2.0)"
readme = "README.md"
# homepage = "https://gyund.github.io/fundamental-analysis/"
repository = "https://github.com/gyund/fundamental-analysis/"
documentation = "https://gyund.github.io/fundamental-analysis/"
keywords = [ "sec-tools", "fundamental analysis", "stocks" ]
classifiers = [
    "License :: OSI Approved :: Eclipse Public License 2.0 (EPL-2.0)",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Office/Business :: Financial :: Investment",
    "Intended Audience :: Science/Research",
    "Development Status :: 2 - Pre-Alpha"
]

packages = [
    { include = "stocktracer", from = "src" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/gyund/fundamental-analysis/issues"

[tool.poetry.scripts]
stocktracer = "stocktracer.__main__:main_cli"

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
alive-progress = "~3.1.3"
beartype = "~0.14.0"
diskcache = "~5.6.1"
fire = "~0.5.0"
pandas = "~2.0.1"
platformdirs = "~3.5.1"
python-dateutil = "~2.8.2"
requests = "~2.31.0"
requests-cache = "~1.0.1"
tabulate = "~0.9.0"
tensorflow-decision-forests = { version = "^1.3.0", optional = true }

[tool.poetry.group.dev.dependencies]
coverage = "*"
coveralls = "^3.3.1"
black = "^23.3.0"
build = "^0.10.0"
isort = "^5.12.0"
mock = "~5.0.2"
pydocstyle = {extras = ["toml"], version = "~6.3.0"}
pydoctest = "~0.1.22"
pylint = "~2.17.4"
pytest = "~7.3.1"
pytest-benchmark = "~4.0.0"
pytest-cov = "~4.1.0"
ruff = "~0.0.270"

[tool.poetry.extras]

tensorflow = ["tensorflow-decision-forests"]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs-gen-files = "~0.5.0"
mkdocs-git-revision-date-localized-plugin = "~1.2.0"
mkdocs-literate-nav = "~0.6.0"
mkdocs-material = "~9.1.14"
mkdocs-material-extensions = "~1.1.1"
mkdocs-section-index = "~0.3.5"
mkdocstrings-python = "~1.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
